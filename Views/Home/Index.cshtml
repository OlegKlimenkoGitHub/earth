@model Battle.WebUI.Models.Game
@{
    ViewBag.Title = "Home Page";
}


<style>
    .submenu {
        margin-left: 10px;
        width: 480px;
        height: 400px;
        font-size: 18px;
    }

    input[type="text"] {
        border: 1px solid #cccccc; /*цвет рамки*/
        border-radius: 3px; /*закругление углов (общее)*/
        -webkit-border-radius: 3px; /*закругление углов (Google Chrome)*/
        -moz-border-radius: 3px; /*закругление углов (FireFox)*/
        -khtml-border-radius: 3px; /*закругление углов (Safari)*/
        background: lightgray !important; /*желательно прописывать, так как в Chrome при сохранных данных оно может быть желтым*/
        outline: none; /*удаляет обводку в браузерах хром(желтая) и сафари(синяя)*/
        height: 16px; /*высота на свое усмотрение*/
        width: 120px; /*ширина на свое усмотрение*/
        color: black; /*цвет шрифта в обычном состоянии*/
        font-size: 14px; /*Размер шрифта*/
    }

    input[type="number"] {
        border: 1px solid #cccccc; /*цвет рамки*/
        border-radius: 3px; /*закругление углов (общее)*/
        -webkit-border-radius: 3px; /*закругление углов (Google Chrome)*/
        -moz-border-radius: 3px; /*закругление углов (FireFox)*/
        -khtml-border-radius: 3px; /*закругление углов (Safari)*/
        background: lightgray !important; /*желательно прописывать, так как в Chrome при сохранных данных оно может быть желтым*/
        outline: none; /*удаляет обводку в браузерах хром(желтая) и сафари(синяя)*/
        height: 16px; /*высота на свое усмотрение*/
        width: 120px; /*ширина на свое усмотрение*/
        color: black; /*цвет шрифта в обычном состоянии*/
        font-size: 14px; /*Размер шрифта*/
    }

    select {
        border: 1px solid #cccccc; /*цвет рамки*/
        border-radius: 3px; /*закругление углов (общее)*/
        -webkit-border-radius: 3px; /*закругление углов (Google Chrome)*/
        -moz-border-radius: 3px; /*закругление углов (FireFox)*/
        -khtml-border-radius: 3px; /*закругление углов (Safari)*/
        background: lightgray !important; /*желательно прописывать, так как в Chrome при сохранных данных оно может быть желтым*/
        outline: none; /*удаляет обводку в браузерах хром(желтая) и сафари(синяя)*/
        height: 20px; /*высота на свое усмотрение*/
        width: 120px; /*ширина на свое усмотрение*/
        color: black; /*цвет шрифта в обычном состоянии*/
        font-size: 14px; /*Размер шрифта*/
    }
</style>

<script type='text/javascript'>
    $(function () {

        var colors = {};
        var designesList = {};
        var mechsList = {};
        GetColors();

        map;
        map = new jvm.Map({
            map: 'world_mill_en',
            container: $('#map'),
            onRegionClick: function (element, code, region) {
                GetCountry(code);
                //GetListMechs();
                //    var message = code ;
                //    alert(message);
            },
            series: {
                regions: [{
                    attribute: 'fill'
                }]
            }
        });
        map.series.regions[0].setValues(colors);
        GetCountry("@Model.selectedCountry.cod");

        // Получить с сервера данные по конкретной стране на основании кода
        function GetCountry(code) {
            var cod = new Array("");
            cod[0] = code;
            $.ajax({
                type: "POST",
                url: "/Home/GetCountry",
                async: false,
                data: JSON.stringify(cod),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: WriteCountry,
                error: ErrorFunc
            });
        }

        // Заполнить данные по стране
        function WriteCountry(data, status) {
            var i = JSON.parse(data);
            //Изменим содержимое абзаца с id="change"
            document.getElementById("valCountry").innerHTML = "Country: " + i[0].cname;
            document.getElementById("valGamer").innerHTML = "Owner: " + i[0].gname;
            document.getElementById("valMinerals").innerHTML = "Minerals: " + i[0].mineral;
            document.getElementById("valPopulation").innerHTML = "Population: " + i[0].population;
            $("#country").show();
            $("#design").hide();
            $("#factory").hide();
            $("#bunker").hide();
            $("#battles").hide();
        }

        // Получить с сервера массив стран и цвета их хозяев
        function GetColors() {
            $.ajax({
                type: "GET",
                url: "/Home/GetColors",
                async: false,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: FormatColors,
                error: ErrorFunc
            });
        }

        // Подготовить цвета в формате удобном для jVectorMap
        function FormatColors(data, status) {
            var dataColors = {};
            dataColors = JSON.parse(data);

            for (var i = 0; i < dataColors.length ; i++) {
                colors[dataColors[i].cod.trim()] = dataColors[i].color;
            }
            //map.series.regions[0].setValues(colors);
        }

        // Получить с сервера список мехов в выбранной стране
        //function GetListMechs() {
        //    $.ajax({
        //        type: "GET",
        //        url: "/Home/GetListMechs",
        //        async: false,
        //        contentType: "application/json; charset=utf-8",
        //        dataType: "json",
        //        success: WriteMechs,
        //        error: ErrorFunc
        //    });
        //}

        //function WriteMechs(data, status) {
        //    mechsList = JSON.parse(data);
        //}

        function ErrorFunc(errorData) {
            alert('Ошибка' + errorData.responseText);
        }

        //$('#world-map').vectorMap({
        //    map: 'world_mill_en',
        //    series: {
        //        regions: [{
        //            values: popData,
        //            scale: ['#C8EEFF', '#0071A4'],
        //            normalizeFunction: 'polynomial'
        //        }]
        //    },
        //    // - При наведении мышки
        //    //onRegionTipShow: function(e, el, code){
        //    //    el.html(el.html() + ' (Население : ' + popData[code] + ')');
        //    //},

        //});
    });

    $(document).ready(function () {

        $("#country").show();
        $("#design").hide();
        $("#factory").hide();
        $("#bunker").hide();
        $("#battles").hide();
        $("#imgMech").show();

        $("#menu2 li").hover(
          function (event) {
              $(event.target).css("color", "red");
              $(event.target).css("cursor", "pointer");
          },
          function (event) {
              $(event.target).css("color", "black");
              $(event.target).css("cursor", "default");
          }
        )

        $("#menuCountry").click(function () {
            $("#country").show();
            $("#design").hide();
            $("#factory").hide();
            $("#bunker").hide();
            $("#battles").hide();
        });

        $("#menuDesign").click(function () {
            $("#country").hide();
            $("#design").show();
            $("#factory").hide();
            $("#bunker").hide();
            $("#battles").hide();
        });

        $("#menuFactory").click(function () {
            $("#country").hide();
            $("#design").hide();
            $("#factory").show();
            $("#bunker").hide();
            $("#battles").hide();
        });

        $("#menuBunker").click(function () {
            $("#country").hide();
            $("#design").hide();
            $("#factory").hide();
            $("#bunker").show();
            $("#battles").hide();
        });

        $("#menuBattles").click(function () {
            $("#country").hide();
            $("#design").hide();
            $("#factory").hide();
            $("#bunker").hide();
            $("#battles").show();
        });

        //function DesignCreated(data, status) {
        //    $("#imgMech").show();
        //    $("#imgMech").fadeOut(5000);
        //}

    });

</script>

<div class="map" id="map" style="position: relative; width: 800px; height: 460px; left: -180px"></div>

<div style="position: relative; background-color: lightgray; border: 0px solid #000; top: -460px; left: 630px; bottom: 400px; height: 460px; width: 500px">

    <ul id="menu2">
        <li id="menuCountry"><span>Country</span></li>
        <li id="menuDesign">Design department</li>
        <li id="menuFactory">Factory</li>
        <li id="menuBunker">Bunker</li>
        <li id="menuBattles">Battles</li>
    </ul>

    <div class="submenu" id="country">
        <p id="valCountry">Country</p>
        <p id="valGamer">Gamer</p>
        <p id="valMinerals">Minerals</p>
        <p id="valPopulation">Population</p>

    </div>

    <div class="submenu" id="design">
        @using (Html.BeginForm("CreateDesign", "Home"))
        {
            @: Welcome Commander! <br>
            @: Create a new project of fighting mechanism: <br>
            @: name: @Html.EditorFor(m => m.design.name)<br>
            @: shield: @Html.EditorFor(m => m.design.shield)<br>
            @: guns: @Html.EditorFor(m => m.design.guns)<br>
            @: caliber: @Html.EditorFor(m => m.design.caliber)<br>
            <input id="btnCreateDesign" type="submit" value="Create project" style="width: 480px" />
            <img id="imgMech" src="~/Images/mech4.gif" style="left: 100px; width: 150px; height: 150px" />
        }

    </div>

    <div class="submenu" id="factory">
        @Html.Partial("Factory", Model)
    </div>

    <div class="submenu" id="bunker" style="overflow-y: scroll">
        @using (Html.BeginForm("SendMechs", "Home"))
        {
            @:Commander! <br>
            @:Battle Mechs ready for the job! <br><br>
            @:All to send to @Html.DropDownList("sendAllTo", new SelectList(Model.countryList, "id", "name"), "")
            <br><br>
            
            var selectedCountry = Model.selectedCountry;
            selectedCountry.GetMechanismesForCountry();
            if (selectedCountry.mechsInCurrentCountry != null){
                foreach (var item in selectedCountry.mechsInCurrentCountry) {
                    if (item == null) { continue; }
                    @item.name  
                    @:   send to     
                    @Html.DropDownList("sendOneTo", new SelectList(Model.countryList, "id", "name"), "")
                    <br>
                }
            }
            if (selectedCountry.enemyMechsInCurrentCountry != null) {           
                foreach (var item in selectedCountry.enemyMechsInCurrentCountry)
                {
                    if (item == null) { continue; }                
                    <span style="color:red"> @item.name - enemy mech </span>
                    <br>
                }
            }
            <input id="btnSendMechs" type="submit" value="Send Mechs" style="width: 450px" />            
        }
    </div>

    <div class="submenu" id="battles">
        Battles ...
    </div>

</div>
<div style="position: relative; border: 0px solid #000; top: -460px; left: -180px; height: 50px; width: 1310px">
    @using (Html.BeginForm("NextTurn", "Home"))
    {

        <input id="btnNextTurn" type="submit" value="Next Turn" style="width: 1310px" />
    }
</div>

